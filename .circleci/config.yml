# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
#: Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

jobs:
  setup:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Setup Workspace"
          command: |
                echo "Creating Workspace Directory"
      - persist_to_workspace:
            root: .
            paths:
                - .
            
  build-linux-arm64:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - run:
          name: "Building for arm64"
          command: |
                cd $CIRCLE_WORKING_DIRECTORY &&
                sudo apt update -y &&
                sudo apt install software-properties-common -y &&
                sudo add-apt-repository ppa:deadsnakes/ppa -y &&
                sudo apt install python3.9-dev -y &&
                sudo apt install python-dev -y &&
                sudo apt install pip -y &&
                python3.9 -m pip install -r requirements.txt &&
                python3.9 -m pip install pyinstaller &&
                python3.9 -m PyInstaller --icon=icon.ico --onefile saavn-cli.py -n saavn-cli &&
                chmod 777 dist/saavn-cli &&
                cd dist &&
                zip saavn-cli-linux-arm64.zip saavn-cli
                rm saavn-cli
      - persist_to_workspace:
            root: .
            paths:
                - dist
      

  build-linux-amd64:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    machine:
      image: ubuntu-2004:202010-01
    resource_class: 2xlarge
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - run:
          name: "Building for Linux amd64"
          command: |
                sudo apt update -y &&
                sudo apt install software-properties-common -y &&
                sudo add-apt-repository ppa:deadsnakes/ppa -y &&
                sudo apt install python3.9-dev -y &&
                sudo apt-get install python3.9-distutils &&
                sudo apt install pip -y &&
                python3.9 -m pip install -r requirements.txt &&
                python3.9 -m pip install pyinstaller &&
                python3.9 -m PyInstaller --icon=icon.ico --onefile saavn-cli.py -n saavn-cli &&
                chmod 777 dist/saavn-cli &&
                cd dist &&
                zip saavn-cli-linux-amd64.zip saavn-cli
                rm saavn-cli
      - persist_to_workspace:
            root: .
            paths:
                - dist
  build-win-amd64: # name of your job
    resource_class: 'windows.medium'
    machine:
      image: 'windows-server-2022-gui:current'   
      shell: 'cmd.exe'
    steps:
      # Commands are run in a Windows virtual machine environment
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - run: pip install pyinstaller && pip install -r requirements.txt && pyinstaller --icon=icon.ico --onefile -n saavn-cli saavn-cli.py
      - persist_to_workspace:
            root: .
            paths:
                - dist
  build-darwin-amd64:
    macos:
      xcode: 13.4.1
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      # Commands will execute in macOS container
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - run: |
          xcodebuild -version
          python3 -m pip install -r requirements.txt
          python3 -m pip install pyinstaller
          python3 -m PyInstaller --icon=icon.ico --onefile saavn-cli.py -n saavn-cli 
          ls -lh dist
          cd dist
          zip saavn-cli-darwin-amd64.zip saavn-cli
          rm saavn-cli
        #install deps and compile
      - persist_to_workspace:
            root: .
            paths:
                - dist
  deploy:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    machine:
      image: ubuntu-2004:202010-01
    resource_class: medium
    
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      
      - run:
          name: "Deploy to Releases page"
          # get all artifacts from previous builds and publish them
          command: |
           ls dist
           sudo apt install jq
           ver=$(jq .version latest-version -r)
           VERSION="v$ver"
           wget https://github.com/tcnksm/ghr/releases/download/v0.16.0/ghr_v0.16.0_linux_amd64.tar.gz
           tar -xvf ghr_v0.16.0_linux_amd64.tar.gz
           chmod 777 ghr_v0.16.0_linux_amd64/ghr
           releasenote=$(cat .circleci/release.md)
           mv ghr_v0.16.0_linux_amd64/ghr ghr
           ./ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete -b "${releasenote}" ${VERSION} ./dist/
      
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-saavn-cli:
    jobs:
      - setup:
          filters:
          # ignore any commit on any branch by default
            branches:
              ignore: /.*/
          # only act on version tags
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            
      - build-linux-arm64:
          requires:
            - setup
          filters:
          # ignore any commit on any branch by default
            branches:
              ignore: /.*/
          # only act on version tags
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
        
      - build-darwin-amd64:
          requires:
            - setup
          filters:
          # ignore any commit on any branch by default
            branches:
              ignore: /.*/
          # only act on version tags
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
          
      - build-win-amd64:
          requires: 
            - setup
          filters:
          # ignore any commit on any branch by default
            branches:
              ignore: /.*/
          # only act on version tags
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
          
      - build-linux-amd64:
          requires:
            - setup
          filters:
          # ignore any commit on any branch by default
            branches:
              ignore: /.*/
          # only act on version tags
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
          

      - deploy:
          requires:
            - build-linux-arm64
            - build-linux-amd64
            - build-win-amd64
            - build-darwin-amd64
            
          filters:
          # ignore any commit on any branch by default
            branches:
              ignore: /.*/
          # only act on version tags
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
          